import Link from 'next/link';

import Pagination from '@/components/shared/pagination';
import ProductCard from '@/components/shared/product/product-card';
import { Button } from '@/components/ui/button';
import {
  getAllCategories,
  getAllProducts,
  getAllTags,
  getProductsByDesignation,
} from '@/lib/actions/product.actions';
import { IProduct } from '@/lib/db/models/product.model';
import ProductSortSelector from '@/components/shared/product/product-sort-selector';
import { getFilterUrl, toSlug } from '@/lib/utils';
import Rating from '@/components/shared/product/rating';

import CollapsibleOnMobile from '@/components/shared/collapsible-on-mobile';
import { IxImage } from '@/types';

const sortOrders = [
  { value: 'price-low-to-high', name: 'Price: Low to high' },
  { value: 'price-high-to-low', name: 'Price: High to low' },
  { value: 'newest-arrivals', name: 'Newest arrivals' },
  { value: 'avg-customer-review', name: 'Avg. customer review' },
  { value: 'best-selling', name: 'Best selling' },
];

const prices = [
  {
    name: '$1 to $20',
    value: '1-20',
  },
  {
    name: '$21 to $50',
    value: '21-50',
  },
  {
    name: '$51 to $1000',
    value: '51-1000',
  },
];
export default async function SearchPage({
  params,
  searchParams,
}: {
  params: { locale: string };
  searchParams: {
    q: string;
    category: string;
    tag: string;
    price: string;
    rating: string;
    xGender: string;
    brand: string;
    sort: string;
    page: string;
  };
}) {
  const xlocale = params.locale; // Maintenant accessible
  const {
    q = 'all',
    category = 'all',
    tag = 'all',
    price = 'all',
    rating = 'all',
    xGender = 'all',
    brand = 'all',
    sort = 'best-selling',
    page = '1',
    
  } = searchParams;
  // ... reste du code
  const paramsxx = {
    q,
    category,
    tag,
    price,
    rating,
    xGender,
    brand,
    sort,
    page,
    
    
  };

  const categories = await getAllCategories();
  const tags = await getAllTags();
  const productsByDesignation = await getProductsByDesignation();
  
  const data = await getAllProducts({
    category,
    tag,
    query: q,
    price,
    rating,
    page: Number(page),
    xGender,
    brand,
    sort,
  });

  //console.log(xlocale)
  return (
    <div>
      <div className="mb-2 py-2 md:border-b flex-between flex-col md:flex-row ">
       
        <div className="flex items-center">
          {data.totalProducts === 0
            ? 'No'
            : `${data.from}-${data.to} of ${data.totalProducts}`}{' '}
          results
          {(q !== 'all' && q !== '') ||
          (category !== 'all' && category !== '') ||
          (xGender !== 'all' && xGender !== '') ||
          (tag !== 'all' && tag !== '') ||
          rating !== 'all' ||
          price !== 'all'
            ? ` for `
            : null}
          {q !== 'all' && q !== '' && '"' + q + '"'}
          {category !== 'all' && category !== '' && `  Category: ` + category}
          {xGender !== 'all' && xGender !== '' && `  Gender: ` + xGender}
          {tag !== 'all' && tag !== '' && `   Tag: ` + tag}
          {price !== 'all' && `    Price: ` + price}
          {rating !== 'all' && `   Rating: ` + rating + ` & up`}
          &nbsp;
          {(q !== 'all' && q !== '') ||
          (category !== 'all' && category !== '') ||
          (tag !== 'all' && tag !== '') ||
          rating !== 'all' ||
          price !== 'all' ? (
            <Button variant={'link'} asChild>
              <Link href={`/${xlocale}/search`}>Clear</Link>
            </Button>
          ) : null}
        </div>
        <div>
          <ProductSortSelector
            sortOrders={sortOrders}
            sort={sort}
            paramsxx={paramsxx}
          />
        </div>
      </div>
      <div className="bg-card grid md:grid-cols-5 md:gap-4">
        <CollapsibleOnMobile title="Filters">
          <div className="space-y-4">
            <div>
              <div className="font-bold">Department</div>
              <ul>
                <li>
                  <Link
                    className={`${
                      ('all' === category || '' === category) && 'text-primary text-green-600'
                    }`}
                    href= {getFilterUrl({locale: xlocale, category: 'all', paramsxx })}
                  >
                    All
                  </Link>
                </li>
                {categories.map((c: string) => (
                  <li key={c}>
                    <Link
                      className={`${c === category && 'text-primary text-green-600'}`}
                      href= {getFilterUrl({ locale: xlocale,category: c, paramsxx})}
                    >
                      {c}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>

            <div>
              <div className="font-bold">Gender</div>
              <ul>
                <li>
                  <Link
                    className={`${
                      ('all' === xGender || '' === xGender) && 'text-primary text-green-600'
                    }`}
                    href= {getFilterUrl({locale: xlocale, xGender: 'all', paramsxx })}
                  >
                    All
                  </Link>
                </li>
                <li>
                  <Link
                    className={`${
                      ('MAN' === xGender || '' === xGender) && 'text-primary text-green-600'
                    }`}
                    href= {getFilterUrl({locale: xlocale, xGender: 'MAN', paramsxx })}
                  >
                    HOMME
                  </Link>
                </li>
                <li>
                  <Link
                    className={`${
                      ('WOMAN' === xGender || '' === xGender) && 'text-primary text-green-600'
                    }`}
                    href= {getFilterUrl({ locale: xlocale,xGender: 'WOMAN', paramsxx })}
                  >
                    FEMME
                  </Link>
                </li>
                <li>
                  <Link
                    className={`${
                      ('YOUTH' === xGender || '' === xGender) && 'text-primary text-green-600'
                    }`}
                    href= {getFilterUrl({ locale: xlocale,xGender: 'YOUTH', paramsxx })}
                  >
                    Enfant
                  </Link>
                </li>
               
              </ul>
            </div>


            {/* <div>
              <div className='font-bold'>Price</div>
              <ul>
                <li>
                  <Link
                    className={`${'all' === price && 'text-primary'}`}
                    href={getFilterUrl({ price: 'all', params })}
                  >
                    All
                  </Link>
                </li>
                {prices.map((p) => (
                  <li key={p.value}>
                    <Link
                      href={getFilterUrl({ price: p.value, params })}
                      className={`${p.value === price && 'text-primary'}`}
                    >
                      {p.name}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>
            <div>
              <div className='font-bold'>Customer Review</div>
              <ul>
                <li>
                  <Link
                    href={getFilterUrl({ rating: 'all', params })}
                    className={`${'all' === rating && 'text-primary'}`}
                  >
                    All
                  </Link>
                </li>

                <li>
                  <Link
                    href={getFilterUrl({ rating: '4', params })}
                    className={`${'4' === rating && 'text-primary'}`}
                  >
                    <div className='flex'>
                      <Rating size={4} rating={4} /> & Up
                    </div>
                  </Link>
                </li>
              </ul>
            </div>
            <div>
              <div className='font-bold'>Tag</div>
              <ul>
                <li>
                  <Link
                    className={`${
                      ('all' === tag || '' === tag) && 'text-primary'
                    }`}
                    href={getFilterUrl({ tag: 'all', params })}
                  >
                    All
                  </Link>
                </li>
                {tags.map((t: string) => (
                  <li key={t}>
                    <Link
                      className={`${toSlug(t) === tag && 'text-primary'}`}
                      href={getFilterUrl({ tag: t, params })}
                    >
                      {t}
                    </Link>
                  </li>
                ))}
              </ul>
            </div> */}
          </div>
        </CollapsibleOnMobile>

        <div className="md:col-span-4 space-y-4">
          <div>
            <div className="font-bold text-xl">Results</div>
            <div>Check each product page for other buying options</div>
          </div>

          <div className="grid grid-cols-1 gap-4 md:grid-cols-2  lg:grid-cols-3  ">
            {data.products.length === 0 && <div>No product found</div>}
            {data.products.map((product: IProduct) => {
              let results:IxImage[] =[]
              results = productsByDesignation.filter(
                (xproduct:IxImage) => xproduct.Designation === product.name
              );
            //  console.log(results + product.name);

              return (
                <ProductCard
                  key={product._id}
                  product={product}
                  similaires={results[0]}
                />
              );
            })}
          </div>
          {data!.totalPages! > 1 && (
            <Pagination page={page} totalPages={data.totalPages} />
          )}
        </div>
      </div>
    </div>
  )};